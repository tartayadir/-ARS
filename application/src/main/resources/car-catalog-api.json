{
  "openapi":"3.0.3",
  "info":{
    "title":"API Car catalog V1.0",
    "description":"This is API for work with the car catalog server. For this sample, you can use the JWT to test the authorization filters and perform authorized requests to server like add ordelete car. You should put your JWT token with prefix \"Bearer \" in authorise filed to authorize. Also, there are examples of request and response that you can use for test API.\n",
    "contact":{
      "name":"Implemica",
      "url":"https://implemica.com",
      "email":"welcome@implemica.com"
    },
    "version":"1.0.0"
  },
  "servers":[
    {
      "url":"http://localhost:8080",
      "description":"Inferred Url"
    }
  ],
  "tags":[
    {
      "name":"Authorization API",
      "description":"Api section for Authorization service"
    },
    {
      "name":"Car API",
      "description":"Api section for Car service"
    },
    {
      "name":"Image API",
      "description":"Api section for Image service"
    }
  ],
  "paths":{
    "/authorization/login":{
      "post":{
        "tags":[
          "Authorization API"
        ],
        "summary":"Get token by login and password.",
        "description":"Get a token to work with the API by login and password of the registered user",
        "operationId":"loginUsingPOST",
        "parameters":[
          {
            "name":"username",
            "in":"query",
            "description":"User username",
            "required":true,
            "style":"form",
            "schema":{
              "type":"string"
            }
          },
          {
            "name":"password",
            "in":"query",
            "description":"User password",
            "required":true,
            "style":"form",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful authorization.",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401":{
            "description":"Failed authorization."
          }
        },
        "security":[
          {
            "Authorization":[
              "global"
            ]
          }
        ]
      }
    },
    "/car-catalog":{
      "get":{
        "tags":[
          "Car API"
        ],
        "summary":"All cars.",
        "description":"Returns all owned сфкы.",
        "operationId":"getAllCarsUsingGET",
        "responses":{
          "200":{
            "description":"Successful.",
            "content":{
              "application/json":{
                "schema":{
                  "type":"array",
                  "items":{
                    "$ref":"#/components/schemas/CarDTO"
                  }
                }
              }
            }
          }
        },
        "security":[
          {
            "Authorization":[
              "global"
            ]
          }
        ]
      },
      "put":{
        "tags":[
          "Car API"
        ],
        "summary":"Update car.",
        "description":"Finds the car by the id and updates it. If the fields are not valid then return 400 or if the cars were not found, return 404",
        "operationId":"updateCarUsingPUT",
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/components/schemas/CarDTO"
              }
            }
          }
        },
        "responses":{
          "200":{
            "description":"Successful.",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/CarDTO"
                }
              }
            }
          },
          "400":{
            "description":"Invalid car."
          },
          "404":{
            "description":"Car not found and cannot be updated."
          }
        },
        "security":[
          {
            "Authorization":[
              "global"
            ]
          }
        ]
      },
      "post":{
        "tags":[
          "Car API"
        ],
        "summary":"Add car.",
        "description":"Makes the car and returns the car if all fields of the machine are valid. If not valid then return 400.",
        "operationId":"addCarUsingPOST",
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                "$ref":"#/components/schemas/CarDTO"
              }
            }
          }
        },
        "responses":{
          "201":{
            "description":"Successful.",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/CarDTO"
                }
              }
            }
          },
          "400":{
            "description":"Invalid car data."
          }
        },
        "security":[
          {
            "Authorization":[
              "global"
            ]
          }
        ]
      }
    },
    "/car-catalog/{id}":{
      "get":{
        "tags":[
          "Car API"
        ],
        "summary":"Found car.",
        "description":"Returns the car by id if the car was found. If no such machine is found, it returns 404 or if no valid id returns 400.",
        "operationId":"getCarUsingGET",
        "parameters":[
          {
            "name":"id",
            "in":"path",
            "description":"id of car to return",
            "required":true,
            "style":"simple",
            "schema":{
              "type":"integer",
              "format":"int64"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful.",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/CarDTO"
                }
              }
            }
          },
          "400":{
            "description":"Invalid car id."
          },
          "404":{
            "description":"Car not found."
          }
        },
        "security":[
          {
            "Authorization":[
              "global"
            ]
          }
        ]
      },
      "delete":{
        "tags":[
          "Car API"
        ],
        "summary":"Delete car and their image.",
        "description":"Removes machine and image by id. For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
        "operationId":"removeCarUsingDELETE",
        "parameters":[
          {
            "name":"id",
            "in":"path",
            "description":"ID of car that needs to be deleted.",
            "required":true,
            "style":"simple",
            "schema":{
              "type":"integer",
              "format":"int64"
            }
          },
          {
            "name":"imageId",
            "in":"query",
            "description":"name of mage file that has car needs to be deleted",
            "required":true,
            "style":"form",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Successful.",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/CarDTO"
                }
              }
            }
          },
          "400":{
            "description":"Invalid car ID or image file name."
          },
          "404":{
            "description":"Car not found and cannot be deleted."
          }
        },
        "security":[
          {
            "Authorization":[
              "global"
            ]
          }
        ]
      }
    },
    "/image/{imageId}":{
      "post":{
        "tags":[
          "Image API"
        ],
        "summary":"Upload image.",
        "description":"Loads the car image, if not a graft extension, returns 400 http status.",
        "operationId":"uploadFileUsingPOST",
        "parameters":[
          {
            "name":"image file name that has car and get from AWS S3 by its name",
            "in":"path",
            "description":"imageId",
            "required":true,
            "style":"simple",
            "schema":{
              "type":"string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "multipart/form-data":{
              "schema":{
                "required":[
                  "imageFile"
                ],
                "type":"object",
                "properties":{
                  "imageFile":{
                    "type":"string",
                    "description":"car image file.",
                    "format":"binary"
                  }
                }
              }
            }
          }
        },
        "responses":{
          "201":{
            "description":"Image is uploaded successful."
          },
          "400":{
            "description":"Incorrect image file expansion."
          }
        },
        "security":[
          {
            "Authorization":[
              "global"
            ]
          }
        ]
      },
      "delete":{
        "tags":[
          "Image API"
        ],
        "summary":"Delete  image.",
        "description":"Deletes car image by their name if image is not found returns 404 http status.",
        "operationId":"deleteFileUsingDELETE",
        "parameters":[
          {
            "name":"Image file name",
            "in":"path",
            "description":"imageId",
            "required":true,
            "style":"simple",
            "schema":{
              "type":"string"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"Image is deleted successful."
          },
          "404":{
            "description":"Cannot find image with this name."
          }
        },
        "security":[
          {
            "Authorization":[
              "global"
            ]
          }
        ]
      }
    }
  },
  "components":{
    "schemas":{
      "AuthResponse":{
        "title":"AuthResponse",
        "type":"object",
        "properties":{
          "access_token":{
            "type":"string",
            "example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          }
        }
      },
      "CarDTO":{
        "title":"CarDTO",
        "type":"object",
        "properties":{
          "additionalOptions":{
            "type":"array",
            "example":"[\"Infotainment\",\"Advanced driver aids\",\"Extended Warranties\",\"Keyless entry and ignition\"]",
            "items":{
              "type":"string"
            }
          },
          "brand":{
            "type":"string",
            "example":"MAZDA",
            "enum":[
              "ACURA",
              "ALFA",
              "ASTON_MARTIN",
              "AUDI",
              "BENTLEY",
              "BMW",
              "BRILLIANCE",
              "BUGATTI",
              "BUICK",
              "BYD",
              "CADILLAC",
              "CHANGAN",
              "CHERY",
              "CHEVROLET",
              "CHRYSLER",
              "CITROEN",
              "DACIA",
              "DAEWOO",
              "DAIHATSU",
              "DATSUN",
              "DODGE",
              "FAW",
              "FERRARI",
              "FIAT",
              "FORD",
              "GEELY",
              "GENESIS",
              "GMC",
              "GREAT_WALL",
              "HAVAL_ROVER",
              "HONDA",
              "HUMMER",
              "HYUNDAI",
              "INFINITI",
              "JAGUAR",
              "JEEP",
              "KIA",
              "LAMBORGHINI",
              "LANCIA",
              "LAND_ROVER",
              "LEXUS",
              "LIFAN",
              "LINCOLN",
              "LOTUS",
              "MARUSSIA",
              "MASERATI",
              "MAYBACH",
              "MAZDA",
              "MCLAREN",
              "MERCEDES",
              "MINI",
              "MITSUBISHI",
              "NISSAN",
              "OPEL",
              "PEUGEOT",
              "PONTIAC",
              "PORSCHE",
              "RENAULT",
              "ROLLS_ROYCE",
              "ROMEO",
              "SAAB",
              "SEAT",
              "SKODA",
              "SMART",
              "SSANGYONG",
              "SUBARU",
              "SUZUKI",
              "TAGAZ",
              "TESLA",
              "TOYOTA",
              "VOLKSWAGEN",
              "VOLVO"
            ]
          },
          "carBodyTypes":{
            "type":"string",
            "example":"PICKUP",
            "enum":[
              "CONVERTIBLE",
              "COUPE",
              "HATCHBACK",
              "MINIVAN",
              "PICKUP",
              "SEDAN",
              "SPORTS_CAR",
              "STATION_WAGON",
              "SUV"
            ]
          },
          "engineCapacity":{
            "maximum":15.0,
            "exclusiveMaximum":false,
            "minimum":0.0,
            "exclusiveMinimum":false,
            "type":"number",
            "format":"double",
            "example":3.5
          },
          "fullDescription":{
            "maxLength":5000,
            "minLength":0,
            "pattern":"^[a-zA-Z \n\r]+[a-zA-Z-\"/0-9 \n.,:!?%()`’‘'—–-]*$",
            "type":"string",
            "example":"A mid-sized coupe, it launched in 2003, just as mid-sized coupes were kinda dying out. The asteroid was certainly on its way, at least. Rewind to the Nineties and this was a bustling corner of the market. But sitting and naming some of the numerous mainstream examples – Calibra, Cougar, Prelude, Coupe (not every carmaker was imaginative) – only makes you realise how long ago this chapter closed. The rise of the SUV didn’t only claim the four-door repmobile’s popularity.\n\nBut the RX-8 was never really billed as a rival to mainstream coupes, even if its ample practicality and modest power output placed it right on their turf. It instead launched in tandem with the Nissan 350Z to join the Honda S2000 in the 'attainable Japanese sports car' sub-niche. These were cars riding the wave of The Fast and the Furious’ success, bringing a bit of JDM sparkle to early Noughties Britain."
          },
          "id":{
            "type":"integer",
            "format":"int64",
            "example":10
          },
          "imageFileId":{
            "maxLength":150,
            "minLength":10,
            "type":"string",
            "example":"default-car-image"
          },
          "model":{
            "maxLength":40,
            "minLength":2,
            "pattern":"^[a-zA-Z ]+[a-zA-Z0-9 ]*$",
            "type":"string",
            "example":"RX 8"
          },
          "shortDescription":{
            "maxLength":1000,
            "minLength":0,
            "pattern":"^[a-zA-Z \n\r]+[a-zA-Z-\"/0-9 \n.,:!?%()`’‘'—–-]*$",
            "type":"string",
            "example":"Rarely has a car broken with convention in such a wanton manner. The RX-8 appears to be everything cars today aren’t, and indeed it seemed to be swimming upstream for a fair few years of its existence."
          },
          "transmissionBoxTypes":{
            "type":"string",
            "example":"ROBOTIC",
            "enum":[
              "AUTOMATIC",
              "MECHANICAL",
              "ROBOTIC",
              "VARIATIONAL"
            ]
          },
          "year":{
            "type":"integer",
            "format":"int32",
            "example":2004
          }
        }
      }
    },
    "securitySchemes":{
      "Authorization":{
        "type":"apiKey",
        "name":"Authorization",
        "in":"header"
      }
    }
  }
}